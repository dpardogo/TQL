# Generated from TQL.g4 by ANTLR 4.11.1
from antlr4 import *
from io import StringIO
import sys
if sys.version_info[1] > 5:
    from typing import TextIO
else:
    from typing.io import TextIO


def serializedATN():
    return [
        4,0,34,385,6,-1,2,0,7,0,2,1,7,1,2,2,7,2,2,3,7,3,2,4,7,4,2,5,7,5,
        2,6,7,6,2,7,7,7,2,8,7,8,2,9,7,9,2,10,7,10,2,11,7,11,2,12,7,12,2,
        13,7,13,2,14,7,14,2,15,7,15,2,16,7,16,2,17,7,17,2,18,7,18,2,19,7,
        19,2,20,7,20,2,21,7,21,2,22,7,22,2,23,7,23,2,24,7,24,2,25,7,25,2,
        26,7,26,2,27,7,27,2,28,7,28,2,29,7,29,2,30,7,30,2,31,7,31,2,32,7,
        32,2,33,7,33,2,34,7,34,2,35,7,35,2,36,7,36,2,37,7,37,2,38,7,38,2,
        39,7,39,2,40,7,40,2,41,7,41,2,42,7,42,2,43,7,43,2,44,7,44,2,45,7,
        45,2,46,7,46,2,47,7,47,2,48,7,48,2,49,7,49,2,50,7,50,2,51,7,51,2,
        52,7,52,2,53,7,53,2,54,7,54,2,55,7,55,2,56,7,56,2,57,7,57,1,0,1,
        0,1,1,1,1,1,2,1,2,1,3,1,3,1,4,1,4,1,5,1,5,1,6,1,6,1,7,1,7,1,8,1,
        8,1,9,1,9,1,10,1,10,1,11,1,11,1,12,1,12,1,13,1,13,1,14,1,14,1,15,
        1,15,1,16,1,16,1,17,1,17,1,18,1,18,1,19,1,19,1,20,1,20,1,21,1,21,
        1,22,1,22,1,23,1,23,1,24,1,24,1,25,1,25,1,26,1,26,1,27,1,27,1,28,
        1,28,1,29,1,29,1,30,1,30,1,31,1,31,1,32,1,32,1,32,1,32,1,32,1,32,
        1,32,1,33,1,33,1,33,1,33,1,33,1,33,1,33,1,33,1,33,1,33,1,33,1,34,
        1,34,1,34,1,34,1,34,1,35,1,35,1,35,1,35,1,35,1,35,1,35,1,35,1,35,
        1,35,1,35,1,35,1,35,1,35,1,35,1,35,1,35,1,35,1,35,1,35,1,35,1,35,
        1,35,1,35,1,35,3,35,230,8,35,1,36,1,36,1,36,1,36,1,37,1,37,1,37,
        1,38,1,38,1,38,1,38,1,38,1,38,1,38,1,38,1,38,1,39,1,39,1,39,1,39,
        1,39,1,39,1,39,1,39,1,39,1,39,1,39,1,39,1,39,1,39,1,39,1,39,1,39,
        1,39,1,39,1,39,1,39,3,39,269,8,39,1,40,1,40,1,40,1,40,1,40,1,40,
        1,40,1,41,1,41,1,41,1,41,1,41,1,42,1,42,1,42,1,43,1,43,1,43,1,43,
        1,43,1,43,1,43,1,44,1,44,1,44,1,44,1,44,1,44,1,44,1,45,1,45,1,45,
        1,45,1,45,1,45,1,46,1,46,1,46,1,47,1,47,1,47,1,48,1,48,1,48,1,48,
        1,48,1,49,1,49,1,49,1,49,1,49,1,49,1,50,1,50,1,50,1,50,1,50,1,50,
        1,50,1,50,1,51,1,51,1,51,1,51,1,51,1,52,1,52,1,52,1,52,1,52,1,52,
        1,52,1,53,1,53,1,53,1,53,1,53,1,53,1,53,1,53,1,53,1,53,1,54,1,54,
        4,54,355,8,54,11,54,12,54,356,1,54,1,54,1,55,1,55,3,55,363,8,55,
        1,55,1,55,1,55,1,55,5,55,369,8,55,10,55,12,55,372,9,55,1,56,4,56,
        375,8,56,11,56,12,56,376,1,57,4,57,380,8,57,11,57,12,57,381,1,57,
        1,57,0,0,58,1,1,3,2,5,3,7,4,9,5,11,6,13,7,15,8,17,0,19,0,21,0,23,
        0,25,0,27,0,29,0,31,0,33,0,35,0,37,0,39,0,41,0,43,0,45,0,47,0,49,
        0,51,0,53,0,55,0,57,0,59,0,61,0,63,0,65,9,67,10,69,11,71,12,73,13,
        75,14,77,15,79,16,81,17,83,18,85,19,87,20,89,21,91,22,93,23,95,24,
        97,25,99,26,101,27,103,28,105,29,107,30,109,31,111,32,113,33,115,
        34,1,0,26,2,0,65,65,97,97,2,0,69,69,101,101,2,0,73,73,105,105,2,
        0,79,79,111,111,2,0,85,85,117,117,2,0,89,89,121,121,2,0,67,67,99,
        99,2,0,82,82,114,114,2,0,84,84,116,116,2,0,68,68,100,100,2,0,71,
        71,103,103,2,0,78,78,110,110,2,0,90,90,122,122,2,0,80,80,112,112,
        2,0,77,77,109,109,2,0,70,70,102,102,2,0,87,87,119,119,2,0,72,72,
        104,104,2,0,83,83,115,115,2,0,66,66,115,115,2,0,76,76,115,115,1,
        0,48,57,1,0,97,122,1,0,65,90,1,0,34,34,3,0,9,10,13,13,32,32,370,
        0,1,1,0,0,0,0,3,1,0,0,0,0,5,1,0,0,0,0,7,1,0,0,0,0,9,1,0,0,0,0,11,
        1,0,0,0,0,13,1,0,0,0,0,15,1,0,0,0,0,65,1,0,0,0,0,67,1,0,0,0,0,69,
        1,0,0,0,0,71,1,0,0,0,0,73,1,0,0,0,0,75,1,0,0,0,0,77,1,0,0,0,0,79,
        1,0,0,0,0,81,1,0,0,0,0,83,1,0,0,0,0,85,1,0,0,0,0,87,1,0,0,0,0,89,
        1,0,0,0,0,91,1,0,0,0,0,93,1,0,0,0,0,95,1,0,0,0,0,97,1,0,0,0,0,99,
        1,0,0,0,0,101,1,0,0,0,0,103,1,0,0,0,0,105,1,0,0,0,0,107,1,0,0,0,
        0,109,1,0,0,0,0,111,1,0,0,0,0,113,1,0,0,0,0,115,1,0,0,0,1,117,1,
        0,0,0,3,119,1,0,0,0,5,121,1,0,0,0,7,123,1,0,0,0,9,125,1,0,0,0,11,
        127,1,0,0,0,13,129,1,0,0,0,15,131,1,0,0,0,17,133,1,0,0,0,19,135,
        1,0,0,0,21,137,1,0,0,0,23,139,1,0,0,0,25,141,1,0,0,0,27,143,1,0,
        0,0,29,145,1,0,0,0,31,147,1,0,0,0,33,149,1,0,0,0,35,151,1,0,0,0,
        37,153,1,0,0,0,39,155,1,0,0,0,41,157,1,0,0,0,43,159,1,0,0,0,45,161,
        1,0,0,0,47,163,1,0,0,0,49,165,1,0,0,0,51,167,1,0,0,0,53,169,1,0,
        0,0,55,171,1,0,0,0,57,173,1,0,0,0,59,175,1,0,0,0,61,177,1,0,0,0,
        63,179,1,0,0,0,65,181,1,0,0,0,67,188,1,0,0,0,69,199,1,0,0,0,71,229,
        1,0,0,0,73,231,1,0,0,0,75,235,1,0,0,0,77,238,1,0,0,0,79,268,1,0,
        0,0,81,270,1,0,0,0,83,277,1,0,0,0,85,282,1,0,0,0,87,285,1,0,0,0,
        89,292,1,0,0,0,91,299,1,0,0,0,93,305,1,0,0,0,95,308,1,0,0,0,97,311,
        1,0,0,0,99,316,1,0,0,0,101,322,1,0,0,0,103,330,1,0,0,0,105,335,1,
        0,0,0,107,342,1,0,0,0,109,352,1,0,0,0,111,362,1,0,0,0,113,374,1,
        0,0,0,115,379,1,0,0,0,117,118,5,40,0,0,118,2,1,0,0,0,119,120,5,44,
        0,0,120,4,1,0,0,0,121,122,5,41,0,0,122,6,1,0,0,0,123,124,5,123,0,
        0,124,8,1,0,0,0,125,126,5,125,0,0,126,10,1,0,0,0,127,128,5,58,0,
        0,128,12,1,0,0,0,129,130,5,91,0,0,130,14,1,0,0,0,131,132,5,93,0,
        0,132,16,1,0,0,0,133,134,7,0,0,0,134,18,1,0,0,0,135,136,7,1,0,0,
        136,20,1,0,0,0,137,138,7,2,0,0,138,22,1,0,0,0,139,140,7,3,0,0,140,
        24,1,0,0,0,141,142,7,4,0,0,142,26,1,0,0,0,143,144,7,5,0,0,144,28,
        1,0,0,0,145,146,7,6,0,0,146,30,1,0,0,0,147,148,7,7,0,0,148,32,1,
        0,0,0,149,150,7,8,0,0,150,34,1,0,0,0,151,152,7,9,0,0,152,36,1,0,
        0,0,153,154,7,10,0,0,154,38,1,0,0,0,155,156,7,11,0,0,156,40,1,0,
        0,0,157,158,7,12,0,0,158,42,1,0,0,0,159,160,7,13,0,0,160,44,1,0,
        0,0,161,162,7,14,0,0,162,46,1,0,0,0,163,164,7,15,0,0,164,48,1,0,
        0,0,165,166,7,16,0,0,166,50,1,0,0,0,167,168,7,17,0,0,168,52,1,0,
        0,0,169,170,7,18,0,0,170,54,1,0,0,0,171,172,7,19,0,0,172,56,1,0,
        0,0,173,174,7,20,0,0,174,58,1,0,0,0,175,176,7,21,0,0,176,60,1,0,
        0,0,177,178,7,22,0,0,178,62,1,0,0,0,179,180,7,23,0,0,180,64,1,0,
        0,0,181,182,3,29,14,0,182,183,3,31,15,0,183,184,3,19,9,0,184,185,
        3,17,8,0,185,186,3,33,16,0,186,187,3,19,9,0,187,66,1,0,0,0,188,189,
        3,33,16,0,189,190,3,23,11,0,190,191,3,25,12,0,191,192,3,31,15,0,
        192,193,3,39,19,0,193,194,3,17,8,0,194,195,3,45,22,0,195,196,3,19,
        9,0,196,197,3,39,19,0,197,198,3,33,16,0,198,68,1,0,0,0,199,200,3,
        49,24,0,200,201,3,21,10,0,201,202,3,33,16,0,202,203,3,51,25,0,203,
        70,1,0,0,0,204,205,3,43,21,0,205,206,3,17,8,0,206,207,3,31,15,0,
        207,208,3,33,16,0,208,209,3,21,10,0,209,210,3,29,14,0,210,211,3,
        21,10,0,211,212,3,43,21,0,212,213,3,17,8,0,213,214,3,39,19,0,214,
        215,3,33,16,0,215,230,1,0,0,0,216,217,3,43,21,0,217,218,3,17,8,0,
        218,219,3,31,15,0,219,220,3,33,16,0,220,221,3,21,10,0,221,222,3,
        29,14,0,222,223,3,21,10,0,223,224,3,43,21,0,224,225,3,17,8,0,225,
        226,3,39,19,0,226,227,3,33,16,0,227,228,3,53,26,0,228,230,1,0,0,
        0,229,204,1,0,0,0,229,216,1,0,0,0,230,72,1,0,0,0,231,232,3,17,8,
        0,232,233,3,35,17,0,233,234,3,35,17,0,234,74,1,0,0,0,235,236,3,33,
        16,0,236,237,3,23,11,0,237,76,1,0,0,0,238,239,3,23,11,0,239,240,
        3,31,15,0,240,241,3,37,18,0,241,242,3,17,8,0,242,243,3,39,19,0,243,
        244,3,21,10,0,244,245,3,41,20,0,245,246,3,19,9,0,246,78,1,0,0,0,
        247,248,3,17,8,0,248,249,3,33,16,0,249,250,3,33,16,0,250,251,3,31,
        15,0,251,252,3,21,10,0,252,253,3,55,27,0,253,254,3,25,12,0,254,255,
        3,33,16,0,255,256,3,19,9,0,256,269,1,0,0,0,257,258,3,17,8,0,258,
        259,3,33,16,0,259,260,3,33,16,0,260,261,3,31,15,0,261,262,3,21,10,
        0,262,263,3,55,27,0,263,264,3,25,12,0,264,265,3,33,16,0,265,266,
        3,19,9,0,266,267,3,53,26,0,267,269,1,0,0,0,268,247,1,0,0,0,268,257,
        1,0,0,0,269,80,1,0,0,0,270,271,3,35,17,0,271,272,3,19,9,0,272,273,
        3,57,28,0,273,274,3,19,9,0,274,275,3,33,16,0,275,276,3,19,9,0,276,
        82,1,0,0,0,277,278,3,47,23,0,278,279,3,31,15,0,279,280,3,23,11,0,
        280,281,3,45,22,0,281,84,1,0,0,0,282,283,3,55,27,0,283,284,3,27,
        13,0,284,86,1,0,0,0,285,286,3,31,15,0,286,287,3,19,9,0,287,288,3,
        43,21,0,288,289,3,23,11,0,289,290,3,31,15,0,290,291,3,33,16,0,291,
        88,1,0,0,0,292,293,3,45,22,0,293,294,3,23,11,0,294,295,3,35,17,0,
        295,296,3,21,10,0,296,297,3,47,23,0,297,298,3,27,13,0,298,90,1,0,
        0,0,299,300,3,45,22,0,300,301,3,17,8,0,301,302,3,33,16,0,302,303,
        3,29,14,0,303,304,3,51,25,0,304,92,1,0,0,0,305,306,3,23,11,0,306,
        307,3,47,23,0,307,94,1,0,0,0,308,309,3,21,10,0,309,310,3,35,17,0,
        310,96,1,0,0,0,311,312,3,53,26,0,312,313,3,51,25,0,313,314,3,23,
        11,0,314,315,3,49,24,0,315,98,1,0,0,0,316,317,3,43,21,0,317,318,
        3,51,25,0,318,319,3,17,8,0,319,320,3,53,26,0,320,321,3,19,9,0,321,
        100,1,0,0,0,322,323,3,53,26,0,323,324,3,25,12,0,324,325,3,45,22,
        0,325,326,3,45,22,0,326,327,3,17,8,0,327,328,3,31,15,0,328,329,3,
        27,13,0,329,102,1,0,0,0,330,331,3,33,16,0,331,332,3,19,9,0,332,333,
        3,17,8,0,333,334,3,45,22,0,334,104,1,0,0,0,335,336,3,43,21,0,336,
        337,3,57,28,0,337,338,3,17,8,0,338,339,3,27,13,0,339,340,3,19,9,
        0,340,341,3,31,15,0,341,106,1,0,0,0,342,343,3,29,14,0,343,344,3,
        23,11,0,344,345,3,39,19,0,345,346,3,33,16,0,346,347,3,19,9,0,347,
        348,3,39,19,0,348,349,3,35,17,0,349,350,3,19,9,0,350,351,3,31,15,
        0,351,108,1,0,0,0,352,354,5,34,0,0,353,355,8,24,0,0,354,353,1,0,
        0,0,355,356,1,0,0,0,356,354,1,0,0,0,356,357,1,0,0,0,357,358,1,0,
        0,0,358,359,5,34,0,0,359,110,1,0,0,0,360,363,3,61,30,0,361,363,3,
        63,31,0,362,360,1,0,0,0,362,361,1,0,0,0,363,370,1,0,0,0,364,369,
        3,61,30,0,365,369,3,63,31,0,366,369,3,59,29,0,367,369,5,95,0,0,368,
        364,1,0,0,0,368,365,1,0,0,0,368,366,1,0,0,0,368,367,1,0,0,0,369,
        372,1,0,0,0,370,368,1,0,0,0,370,371,1,0,0,0,371,112,1,0,0,0,372,
        370,1,0,0,0,373,375,3,59,29,0,374,373,1,0,0,0,375,376,1,0,0,0,376,
        374,1,0,0,0,376,377,1,0,0,0,377,114,1,0,0,0,378,380,7,25,0,0,379,
        378,1,0,0,0,380,381,1,0,0,0,381,379,1,0,0,0,381,382,1,0,0,0,382,
        383,1,0,0,0,383,384,6,57,0,0,384,116,1,0,0,0,9,0,229,268,356,362,
        368,370,376,381,1,6,0,0
    ]

class TQLLexer(Lexer):

    atn = ATNDeserializer().deserialize(serializedATN())

    decisionsToDFA = [ DFA(ds, i) for i, ds in enumerate(atn.decisionToState) ]

    T__0 = 1
    T__1 = 2
    T__2 = 3
    T__3 = 4
    T__4 = 5
    T__5 = 6
    T__6 = 7
    T__7 = 8
    CREATE = 9
    TOURNAMENT = 10
    WITH = 11
    PARTICIPANT = 12
    ADD = 13
    TO = 14
    ORGANIZE = 15
    ATTRIBUTE = 16
    DELETE = 17
    FROM = 18
    BY = 19
    REPORT = 20
    MODIFY = 21
    MATCH = 22
    OF = 23
    ID = 24
    SHOW = 25
    PHASE = 26
    SUMMARY = 27
    TEAM = 28
    PLAYER = 29
    CONTENDER = 30
    STRING = 31
    WORD = 32
    INTEGER = 33
    WHITESPACE = 34

    channelNames = [ u"DEFAULT_TOKEN_CHANNEL", u"HIDDEN" ]

    modeNames = [ "DEFAULT_MODE" ]

    literalNames = [ "<INVALID>",
            "'('", "','", "')'", "'{'", "'}'", "':'", "'['", "']'" ]

    symbolicNames = [ "<INVALID>",
            "CREATE", "TOURNAMENT", "WITH", "PARTICIPANT", "ADD", "TO", 
            "ORGANIZE", "ATTRIBUTE", "DELETE", "FROM", "BY", "REPORT", "MODIFY", 
            "MATCH", "OF", "ID", "SHOW", "PHASE", "SUMMARY", "TEAM", "PLAYER", 
            "CONTENDER", "STRING", "WORD", "INTEGER", "WHITESPACE" ]

    ruleNames = [ "T__0", "T__1", "T__2", "T__3", "T__4", "T__5", "T__6", 
                  "T__7", "A", "E", "I", "O", "U", "Y", "C", "R", "T", "D", 
                  "G", "N", "Z", "P", "M", "F", "W", "H", "S", "B", "L", 
                  "DIGIT", "LOWERCASE", "UPPERCASE", "CREATE", "TOURNAMENT", 
                  "WITH", "PARTICIPANT", "ADD", "TO", "ORGANIZE", "ATTRIBUTE", 
                  "DELETE", "FROM", "BY", "REPORT", "MODIFY", "MATCH", "OF", 
                  "ID", "SHOW", "PHASE", "SUMMARY", "TEAM", "PLAYER", "CONTENDER", 
                  "STRING", "WORD", "INTEGER", "WHITESPACE" ]

    grammarFileName = "TQL.g4"

    def __init__(self, input=None, output:TextIO = sys.stdout):
        super().__init__(input, output)
        self.checkVersion("4.11.1")
        self._interp = LexerATNSimulator(self, self.atn, self.decisionsToDFA, PredictionContextCache())
        self._actions = None
        self._predicates = None


