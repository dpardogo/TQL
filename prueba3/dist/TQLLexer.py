# Generated from TQL.g4 by ANTLR 4.11.1
from antlr4 import *
from io import StringIO
import sys
if sys.version_info[1] > 5:
    from typing import TextIO
else:
    from typing.io import TextIO


def serializedATN():
    return [
        4,0,41,466,6,-1,2,0,7,0,2,1,7,1,2,2,7,2,2,3,7,3,2,4,7,4,2,5,7,5,
        2,6,7,6,2,7,7,7,2,8,7,8,2,9,7,9,2,10,7,10,2,11,7,11,2,12,7,12,2,
        13,7,13,2,14,7,14,2,15,7,15,2,16,7,16,2,17,7,17,2,18,7,18,2,19,7,
        19,2,20,7,20,2,21,7,21,2,22,7,22,2,23,7,23,2,24,7,24,2,25,7,25,2,
        26,7,26,2,27,7,27,2,28,7,28,2,29,7,29,2,30,7,30,2,31,7,31,2,32,7,
        32,2,33,7,33,2,34,7,34,2,35,7,35,2,36,7,36,2,37,7,37,2,38,7,38,2,
        39,7,39,2,40,7,40,2,41,7,41,2,42,7,42,2,43,7,43,2,44,7,44,2,45,7,
        45,2,46,7,46,2,47,7,47,2,48,7,48,2,49,7,49,2,50,7,50,2,51,7,51,2,
        52,7,52,2,53,7,53,2,54,7,54,2,55,7,55,2,56,7,56,2,57,7,57,2,58,7,
        58,2,59,7,59,2,60,7,60,2,61,7,61,2,62,7,62,2,63,7,63,2,64,7,64,2,
        65,7,65,1,0,1,0,1,1,1,1,1,2,1,2,1,3,1,3,1,4,1,4,1,5,1,5,1,6,1,6,
        1,7,1,7,1,8,1,8,1,9,1,9,1,10,1,10,1,11,1,11,1,12,1,12,1,13,1,13,
        1,14,1,14,1,15,1,15,1,16,1,16,1,17,1,17,1,18,1,18,1,19,1,19,1,20,
        1,20,1,21,1,21,1,22,1,22,1,23,1,23,1,24,1,24,1,25,1,25,1,26,1,26,
        1,27,1,27,1,28,1,28,1,29,1,29,1,30,1,30,1,31,1,31,1,32,1,32,1,33,
        1,33,1,33,1,33,1,33,1,33,1,33,1,34,1,34,1,34,1,34,1,34,1,34,1,34,
        1,34,1,34,1,34,1,34,1,35,1,35,1,35,1,35,1,35,1,36,1,36,1,36,1,36,
        1,36,1,36,1,36,1,36,1,36,1,36,1,36,1,36,1,36,1,36,1,36,1,36,1,36,
        1,36,1,36,1,36,1,36,1,36,1,36,1,36,1,36,3,36,248,8,36,1,37,1,37,
        1,37,1,37,1,38,1,38,1,38,1,39,1,39,1,39,1,39,1,39,1,39,1,39,1,39,
        1,39,1,40,1,40,1,40,1,40,1,40,1,40,1,40,1,40,1,40,1,40,1,40,1,40,
        1,40,1,40,1,40,1,40,1,40,1,40,1,40,1,40,1,40,3,40,287,8,40,1,41,
        1,41,1,41,1,41,1,41,1,41,1,41,1,42,1,42,1,42,1,42,1,42,1,43,1,43,
        1,43,1,44,1,44,1,44,1,44,1,44,1,44,1,44,1,45,1,45,1,45,1,45,1,45,
        1,45,1,45,1,46,1,46,1,46,1,46,1,46,1,46,1,47,1,47,1,47,1,48,1,48,
        1,48,1,49,1,49,1,49,1,49,1,49,1,50,1,50,1,50,1,50,1,50,1,50,1,51,
        1,51,1,51,1,51,1,51,1,51,1,51,1,51,1,52,1,52,1,52,1,52,1,52,1,52,
        1,52,1,52,1,52,1,52,1,52,3,52,360,8,52,1,53,1,53,1,53,1,53,1,53,
        1,53,1,53,1,53,1,53,1,53,1,53,1,53,1,53,1,53,3,53,376,8,53,1,54,
        1,54,1,54,1,54,1,54,1,54,1,54,1,54,1,54,1,54,1,54,1,54,1,54,1,54,
        1,54,1,54,1,54,1,54,1,54,1,54,3,54,398,8,54,1,55,1,55,1,55,1,56,
        1,56,1,56,1,56,1,56,1,56,1,57,1,57,1,57,1,57,1,57,1,58,1,58,1,58,
        1,58,1,58,1,59,1,59,1,59,1,59,1,59,1,60,1,60,1,60,1,60,1,60,1,61,
        1,61,1,61,1,61,1,61,1,62,1,62,4,62,436,8,62,11,62,12,62,437,1,62,
        1,62,1,63,1,63,3,63,444,8,63,1,63,1,63,1,63,1,63,5,63,450,8,63,10,
        63,12,63,453,9,63,1,64,4,64,456,8,64,11,64,12,64,457,1,65,4,65,461,
        8,65,11,65,12,65,462,1,65,1,65,0,0,66,1,1,3,2,5,3,7,4,9,5,11,6,13,
        7,15,8,17,0,19,0,21,0,23,0,25,0,27,0,29,0,31,0,33,0,35,0,37,0,39,
        0,41,0,43,0,45,0,47,0,49,0,51,0,53,0,55,0,57,0,59,0,61,0,63,0,65,
        0,67,9,69,10,71,11,73,12,75,13,77,14,79,15,81,16,83,17,85,18,87,
        19,89,20,91,21,93,22,95,23,97,24,99,25,101,26,103,27,105,28,107,
        29,109,30,111,31,113,32,115,33,117,34,119,35,121,36,123,37,125,38,
        127,39,129,40,131,41,1,0,27,2,0,65,65,97,97,2,0,69,69,101,101,2,
        0,73,73,105,105,2,0,79,79,111,111,2,0,85,85,117,117,2,0,89,89,121,
        121,2,0,67,67,99,99,2,0,82,82,114,114,2,0,84,84,116,116,2,0,68,68,
        100,100,2,0,71,71,103,103,2,0,78,78,110,110,2,0,90,90,122,122,2,
        0,80,80,112,112,2,0,77,77,109,109,2,0,70,70,102,102,2,0,87,87,119,
        119,2,0,72,72,104,104,2,0,83,83,115,115,2,0,66,66,115,115,2,0,76,
        76,115,115,2,0,88,88,120,120,1,0,48,57,1,0,97,122,1,0,65,90,1,0,
        34,34,3,0,9,10,13,13,32,32,453,0,1,1,0,0,0,0,3,1,0,0,0,0,5,1,0,0,
        0,0,7,1,0,0,0,0,9,1,0,0,0,0,11,1,0,0,0,0,13,1,0,0,0,0,15,1,0,0,0,
        0,67,1,0,0,0,0,69,1,0,0,0,0,71,1,0,0,0,0,73,1,0,0,0,0,75,1,0,0,0,
        0,77,1,0,0,0,0,79,1,0,0,0,0,81,1,0,0,0,0,83,1,0,0,0,0,85,1,0,0,0,
        0,87,1,0,0,0,0,89,1,0,0,0,0,91,1,0,0,0,0,93,1,0,0,0,0,95,1,0,0,0,
        0,97,1,0,0,0,0,99,1,0,0,0,0,101,1,0,0,0,0,103,1,0,0,0,0,105,1,0,
        0,0,0,107,1,0,0,0,0,109,1,0,0,0,0,111,1,0,0,0,0,113,1,0,0,0,0,115,
        1,0,0,0,0,117,1,0,0,0,0,119,1,0,0,0,0,121,1,0,0,0,0,123,1,0,0,0,
        0,125,1,0,0,0,0,127,1,0,0,0,0,129,1,0,0,0,0,131,1,0,0,0,1,133,1,
        0,0,0,3,135,1,0,0,0,5,137,1,0,0,0,7,139,1,0,0,0,9,141,1,0,0,0,11,
        143,1,0,0,0,13,145,1,0,0,0,15,147,1,0,0,0,17,149,1,0,0,0,19,151,
        1,0,0,0,21,153,1,0,0,0,23,155,1,0,0,0,25,157,1,0,0,0,27,159,1,0,
        0,0,29,161,1,0,0,0,31,163,1,0,0,0,33,165,1,0,0,0,35,167,1,0,0,0,
        37,169,1,0,0,0,39,171,1,0,0,0,41,173,1,0,0,0,43,175,1,0,0,0,45,177,
        1,0,0,0,47,179,1,0,0,0,49,181,1,0,0,0,51,183,1,0,0,0,53,185,1,0,
        0,0,55,187,1,0,0,0,57,189,1,0,0,0,59,191,1,0,0,0,61,193,1,0,0,0,
        63,195,1,0,0,0,65,197,1,0,0,0,67,199,1,0,0,0,69,206,1,0,0,0,71,217,
        1,0,0,0,73,247,1,0,0,0,75,249,1,0,0,0,77,253,1,0,0,0,79,256,1,0,
        0,0,81,286,1,0,0,0,83,288,1,0,0,0,85,295,1,0,0,0,87,300,1,0,0,0,
        89,303,1,0,0,0,91,310,1,0,0,0,93,317,1,0,0,0,95,323,1,0,0,0,97,326,
        1,0,0,0,99,329,1,0,0,0,101,334,1,0,0,0,103,340,1,0,0,0,105,359,1,
        0,0,0,107,375,1,0,0,0,109,397,1,0,0,0,111,399,1,0,0,0,113,402,1,
        0,0,0,115,408,1,0,0,0,117,413,1,0,0,0,119,418,1,0,0,0,121,423,1,
        0,0,0,123,428,1,0,0,0,125,433,1,0,0,0,127,443,1,0,0,0,129,455,1,
        0,0,0,131,460,1,0,0,0,133,134,5,40,0,0,134,2,1,0,0,0,135,136,5,44,
        0,0,136,4,1,0,0,0,137,138,5,41,0,0,138,6,1,0,0,0,139,140,5,123,0,
        0,140,8,1,0,0,0,141,142,5,125,0,0,142,10,1,0,0,0,143,144,5,58,0,
        0,144,12,1,0,0,0,145,146,5,91,0,0,146,14,1,0,0,0,147,148,5,93,0,
        0,148,16,1,0,0,0,149,150,7,0,0,0,150,18,1,0,0,0,151,152,7,1,0,0,
        152,20,1,0,0,0,153,154,7,2,0,0,154,22,1,0,0,0,155,156,7,3,0,0,156,
        24,1,0,0,0,157,158,7,4,0,0,158,26,1,0,0,0,159,160,7,5,0,0,160,28,
        1,0,0,0,161,162,7,6,0,0,162,30,1,0,0,0,163,164,7,7,0,0,164,32,1,
        0,0,0,165,166,7,8,0,0,166,34,1,0,0,0,167,168,7,9,0,0,168,36,1,0,
        0,0,169,170,7,10,0,0,170,38,1,0,0,0,171,172,7,11,0,0,172,40,1,0,
        0,0,173,174,7,12,0,0,174,42,1,0,0,0,175,176,7,13,0,0,176,44,1,0,
        0,0,177,178,7,14,0,0,178,46,1,0,0,0,179,180,7,15,0,0,180,48,1,0,
        0,0,181,182,7,16,0,0,182,50,1,0,0,0,183,184,7,17,0,0,184,52,1,0,
        0,0,185,186,7,18,0,0,186,54,1,0,0,0,187,188,7,19,0,0,188,56,1,0,
        0,0,189,190,7,20,0,0,190,58,1,0,0,0,191,192,7,21,0,0,192,60,1,0,
        0,0,193,194,7,22,0,0,194,62,1,0,0,0,195,196,7,23,0,0,196,64,1,0,
        0,0,197,198,7,24,0,0,198,66,1,0,0,0,199,200,3,29,14,0,200,201,3,
        31,15,0,201,202,3,19,9,0,202,203,3,17,8,0,203,204,3,33,16,0,204,
        205,3,19,9,0,205,68,1,0,0,0,206,207,3,33,16,0,207,208,3,23,11,0,
        208,209,3,25,12,0,209,210,3,31,15,0,210,211,3,39,19,0,211,212,3,
        17,8,0,212,213,3,45,22,0,213,214,3,19,9,0,214,215,3,39,19,0,215,
        216,3,33,16,0,216,70,1,0,0,0,217,218,3,49,24,0,218,219,3,21,10,0,
        219,220,3,33,16,0,220,221,3,51,25,0,221,72,1,0,0,0,222,223,3,43,
        21,0,223,224,3,17,8,0,224,225,3,31,15,0,225,226,3,33,16,0,226,227,
        3,21,10,0,227,228,3,29,14,0,228,229,3,21,10,0,229,230,3,43,21,0,
        230,231,3,17,8,0,231,232,3,39,19,0,232,233,3,33,16,0,233,248,1,0,
        0,0,234,235,3,43,21,0,235,236,3,17,8,0,236,237,3,31,15,0,237,238,
        3,33,16,0,238,239,3,21,10,0,239,240,3,29,14,0,240,241,3,21,10,0,
        241,242,3,43,21,0,242,243,3,17,8,0,243,244,3,39,19,0,244,245,3,33,
        16,0,245,246,3,53,26,0,246,248,1,0,0,0,247,222,1,0,0,0,247,234,1,
        0,0,0,248,74,1,0,0,0,249,250,3,17,8,0,250,251,3,35,17,0,251,252,
        3,35,17,0,252,76,1,0,0,0,253,254,3,33,16,0,254,255,3,23,11,0,255,
        78,1,0,0,0,256,257,3,23,11,0,257,258,3,31,15,0,258,259,3,37,18,0,
        259,260,3,17,8,0,260,261,3,39,19,0,261,262,3,21,10,0,262,263,3,41,
        20,0,263,264,3,19,9,0,264,80,1,0,0,0,265,266,3,17,8,0,266,267,3,
        33,16,0,267,268,3,33,16,0,268,269,3,31,15,0,269,270,3,21,10,0,270,
        271,3,55,27,0,271,272,3,25,12,0,272,273,3,33,16,0,273,274,3,19,9,
        0,274,287,1,0,0,0,275,276,3,17,8,0,276,277,3,33,16,0,277,278,3,33,
        16,0,278,279,3,31,15,0,279,280,3,21,10,0,280,281,3,55,27,0,281,282,
        3,25,12,0,282,283,3,33,16,0,283,284,3,19,9,0,284,285,3,53,26,0,285,
        287,1,0,0,0,286,265,1,0,0,0,286,275,1,0,0,0,287,82,1,0,0,0,288,289,
        3,35,17,0,289,290,3,19,9,0,290,291,3,57,28,0,291,292,3,19,9,0,292,
        293,3,33,16,0,293,294,3,19,9,0,294,84,1,0,0,0,295,296,3,47,23,0,
        296,297,3,31,15,0,297,298,3,23,11,0,298,299,3,45,22,0,299,86,1,0,
        0,0,300,301,3,55,27,0,301,302,3,27,13,0,302,88,1,0,0,0,303,304,3,
        31,15,0,304,305,3,19,9,0,305,306,3,43,21,0,306,307,3,23,11,0,307,
        308,3,31,15,0,308,309,3,33,16,0,309,90,1,0,0,0,310,311,3,45,22,0,
        311,312,3,23,11,0,312,313,3,35,17,0,313,314,3,21,10,0,314,315,3,
        47,23,0,315,316,3,27,13,0,316,92,1,0,0,0,317,318,3,45,22,0,318,319,
        3,17,8,0,319,320,3,33,16,0,320,321,3,29,14,0,321,322,3,51,25,0,322,
        94,1,0,0,0,323,324,3,23,11,0,324,325,3,47,23,0,325,96,1,0,0,0,326,
        327,3,21,10,0,327,328,3,35,17,0,328,98,1,0,0,0,329,330,3,53,26,0,
        330,331,3,51,25,0,331,332,3,23,11,0,332,333,3,49,24,0,333,100,1,
        0,0,0,334,335,3,43,21,0,335,336,3,51,25,0,336,337,3,17,8,0,337,338,
        3,53,26,0,338,339,3,19,9,0,339,102,1,0,0,0,340,341,3,53,26,0,341,
        342,3,25,12,0,342,343,3,45,22,0,343,344,3,45,22,0,344,345,3,17,8,
        0,345,346,3,31,15,0,346,347,3,27,13,0,347,104,1,0,0,0,348,349,3,
        33,16,0,349,350,3,19,9,0,350,351,3,17,8,0,351,352,3,45,22,0,352,
        360,1,0,0,0,353,354,3,33,16,0,354,355,3,19,9,0,355,356,3,17,8,0,
        356,357,3,45,22,0,357,358,3,53,26,0,358,360,1,0,0,0,359,348,1,0,
        0,0,359,353,1,0,0,0,360,106,1,0,0,0,361,362,3,43,21,0,362,363,3,
        57,28,0,363,364,3,17,8,0,364,365,3,27,13,0,365,366,3,19,9,0,366,
        367,3,31,15,0,367,376,1,0,0,0,368,369,3,43,21,0,369,370,3,57,28,
        0,370,371,3,17,8,0,371,372,3,27,13,0,372,373,3,19,9,0,373,374,3,
        31,15,0,374,376,1,0,0,0,375,361,1,0,0,0,375,368,1,0,0,0,376,108,
        1,0,0,0,377,378,3,29,14,0,378,379,3,23,11,0,379,380,3,39,19,0,380,
        381,3,33,16,0,381,382,3,19,9,0,382,383,3,39,19,0,383,384,3,35,17,
        0,384,385,3,19,9,0,385,386,3,31,15,0,386,398,1,0,0,0,387,388,3,29,
        14,0,388,389,3,23,11,0,389,390,3,39,19,0,390,391,3,33,16,0,391,392,
        3,19,9,0,392,393,3,39,19,0,393,394,3,35,17,0,394,395,3,19,9,0,395,
        396,3,31,15,0,396,398,1,0,0,0,397,377,1,0,0,0,397,387,1,0,0,0,398,
        110,1,0,0,0,399,400,3,21,10,0,400,401,3,39,19,0,401,112,1,0,0,0,
        402,403,3,29,14,0,403,404,3,57,28,0,404,405,3,19,9,0,405,406,3,17,
        8,0,406,407,3,31,15,0,407,114,1,0,0,0,408,409,3,57,28,0,409,410,
        3,21,10,0,410,411,3,53,26,0,411,412,3,33,16,0,412,116,1,0,0,0,413,
        414,3,35,17,0,414,415,3,17,8,0,415,416,3,33,16,0,416,417,3,17,8,
        0,417,118,1,0,0,0,418,419,3,19,9,0,419,420,3,59,29,0,420,421,3,21,
        10,0,421,422,3,33,16,0,422,120,1,0,0,0,423,424,3,57,28,0,424,425,
        3,23,11,0,425,426,3,17,8,0,426,427,3,35,17,0,427,122,1,0,0,0,428,
        429,3,43,21,0,429,430,3,17,8,0,430,431,3,33,16,0,431,432,3,51,25,
        0,432,124,1,0,0,0,433,435,5,34,0,0,434,436,8,25,0,0,435,434,1,0,
        0,0,436,437,1,0,0,0,437,435,1,0,0,0,437,438,1,0,0,0,438,439,1,0,
        0,0,439,440,5,34,0,0,440,126,1,0,0,0,441,444,3,63,31,0,442,444,3,
        65,32,0,443,441,1,0,0,0,443,442,1,0,0,0,444,451,1,0,0,0,445,450,
        3,63,31,0,446,450,3,65,32,0,447,450,3,61,30,0,448,450,5,95,0,0,449,
        445,1,0,0,0,449,446,1,0,0,0,449,447,1,0,0,0,449,448,1,0,0,0,450,
        453,1,0,0,0,451,449,1,0,0,0,451,452,1,0,0,0,452,128,1,0,0,0,453,
        451,1,0,0,0,454,456,3,61,30,0,455,454,1,0,0,0,456,457,1,0,0,0,457,
        455,1,0,0,0,457,458,1,0,0,0,458,130,1,0,0,0,459,461,7,26,0,0,460,
        459,1,0,0,0,461,462,1,0,0,0,462,460,1,0,0,0,462,463,1,0,0,0,463,
        464,1,0,0,0,464,465,6,65,0,0,465,132,1,0,0,0,12,0,247,286,359,375,
        397,437,443,449,451,457,462,1,6,0,0
    ]

class TQLLexer(Lexer):

    atn = ATNDeserializer().deserialize(serializedATN())

    decisionsToDFA = [ DFA(ds, i) for i, ds in enumerate(atn.decisionToState) ]

    T__0 = 1
    T__1 = 2
    T__2 = 3
    T__3 = 4
    T__4 = 5
    T__5 = 6
    T__6 = 7
    T__7 = 8
    CREATE = 9
    TOURNAMENT = 10
    WITH = 11
    PARTICIPANT = 12
    ADD = 13
    TO = 14
    ORGANIZE = 15
    ATTRIBUTE = 16
    DELETE = 17
    FROM = 18
    BY = 19
    REPORT = 20
    MODIFY = 21
    MATCH = 22
    OF = 23
    ID = 24
    SHOW = 25
    PHASE = 26
    SUMMARY = 27
    TEAM = 28
    PLAYER = 29
    CONTENDER = 30
    IN = 31
    CLEAR = 32
    LIST = 33
    DATA = 34
    EXIT = 35
    LOAD = 36
    PATH = 37
    STRING = 38
    WORD = 39
    INTEGER = 40
    WHITESPACE = 41

    channelNames = [ u"DEFAULT_TOKEN_CHANNEL", u"HIDDEN" ]

    modeNames = [ "DEFAULT_MODE" ]

    literalNames = [ "<INVALID>",
            "'('", "','", "')'", "'{'", "'}'", "':'", "'['", "']'" ]

    symbolicNames = [ "<INVALID>",
            "CREATE", "TOURNAMENT", "WITH", "PARTICIPANT", "ADD", "TO", 
            "ORGANIZE", "ATTRIBUTE", "DELETE", "FROM", "BY", "REPORT", "MODIFY", 
            "MATCH", "OF", "ID", "SHOW", "PHASE", "SUMMARY", "TEAM", "PLAYER", 
            "CONTENDER", "IN", "CLEAR", "LIST", "DATA", "EXIT", "LOAD", 
            "PATH", "STRING", "WORD", "INTEGER", "WHITESPACE" ]

    ruleNames = [ "T__0", "T__1", "T__2", "T__3", "T__4", "T__5", "T__6", 
                  "T__7", "A", "E", "I", "O", "U", "Y", "C", "R", "T", "D", 
                  "G", "N", "Z", "P", "M", "F", "W", "H", "S", "B", "L", 
                  "X", "DIGIT", "LOWERCASE", "UPPERCASE", "CREATE", "TOURNAMENT", 
                  "WITH", "PARTICIPANT", "ADD", "TO", "ORGANIZE", "ATTRIBUTE", 
                  "DELETE", "FROM", "BY", "REPORT", "MODIFY", "MATCH", "OF", 
                  "ID", "SHOW", "PHASE", "SUMMARY", "TEAM", "PLAYER", "CONTENDER", 
                  "IN", "CLEAR", "LIST", "DATA", "EXIT", "LOAD", "PATH", 
                  "STRING", "WORD", "INTEGER", "WHITESPACE" ]

    grammarFileName = "TQL.g4"

    def __init__(self, input=None, output:TextIO = sys.stdout):
        super().__init__(input, output)
        self.checkVersion("4.11.1")
        self._interp = LexerATNSimulator(self, self.atn, self.decisionsToDFA, PredictionContextCache())
        self._actions = None
        self._predicates = None


